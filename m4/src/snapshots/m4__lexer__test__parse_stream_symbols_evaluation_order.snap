---
source: m4/src/lexer.rs
expression: "snapshot_symbols_as_stream(ParseConfig::default(), &f)"
---
STDOUT:
Macro(
    Macro {
        input: "define(hello, error)",
        name: MacroName(
            "define",
        ),
        args: [
            MacroArg {
                input: "hello",
                symbols: [
                    Text(
                        "hello",
                    ),
                ],
            },
            MacroArg {
                input: "error",
                symbols: [
                    Text(
                        "error",
                    ),
                ],
            },
        ],
    },
)
Macro(
    Macro {
        input: "dnl",
        name: MacroName(
            "dnl",
        ),
        args: [],
    },
)
Newline
Macro(
    Macro {
        input: "define(m2, m1(hello) m1($1))",
        name: MacroName(
            "define",
        ),
        args: [
            MacroArg {
                input: "m2",
                symbols: [
                    Text(
                        "m2",
                    ),
                ],
            },
            MacroArg {
                input: "m1(hello) m1($1)",
                symbols: [
                    Text(
                        "m1",
                    ),
                    Text(
                        "(",
                    ),
                    Text(
                        "hello",
                    ),
                    Text(
                        ")",
                    ),
                    Text(
                        " ",
                    ),
                    Text(
                        "m1",
                    ),
                    Text(
                        "(",
                    ),
                    Text(
                        "$",
                    ),
                    Text(
                        "1",
                    ),
                    Text(
                        ")",
                    ),
                ],
            },
        ],
    },
)
Macro(
    Macro {
        input: "dnl",
        name: MacroName(
            "dnl",
        ),
        args: [],
    },
)
Text(
    " ",
)
Newline
Macro(
    Macro {
        input: "dnl",
        name: MacroName(
            "dnl",
        ),
        args: [],
    },
)
Text(
    " ",
)
Text(
    "this ",
)
Text(
    "actually ",
)
Text(
    "defines ",
)
Text(
    "a ",
)
Text(
    "macro ",
)
Text(
    "called ",
)
Quoted(
    Quoted {
        contents: "error",
    },
)
Text(
    " ",
)
Text(
    "and ",
)
Text(
    "so ",
)
Text(
    "the ",
)
Text(
    "original ",
)
Text(
    "definition ",
)
Text(
    "for ",
)
Text(
    "hello ",
)
Text(
    "remains ",
)
Text(
    "the ",
)
Text(
    "same.",
)
Newline
Macro(
    Macro {
        input: "define(hello, goodbye)",
        name: MacroName(
            "define",
        ),
        args: [
            MacroArg {
                input: "hello",
                symbols: [
                    Text(
                        "hello",
                    ),
                ],
            },
            MacroArg {
                input: "goodbye",
                symbols: [
                    Text(
                        "goodbye",
                    ),
                ],
            },
        ],
    },
)
Macro(
    Macro {
        input: "dnl",
        name: MacroName(
            "dnl",
        ),
        args: [],
    },
)
Newline
Macro(
    Macro {
        input: "define(m1, ``m1'' $1)",
        name: MacroName(
            "define",
        ),
        args: [
            MacroArg {
                input: "m1",
                symbols: [
                    Text(
                        "m1",
                    ),
                ],
            },
            MacroArg {
                input: "``m1'' $1",
                symbols: [
                    Quoted(
                        Quoted {
                            contents: "`m1'",
                        },
                    ),
                    Text(
                        " $",
                    ),
                    Text(
                        "1",
                    ),
                ],
            },
        ],
    },
)
Macro(
    Macro {
        input: "dnl",
        name: MacroName(
            "dnl",
        ),
        args: [],
    },
)
Newline
Text(
    "m2",
)
Text(
    "(",
)
Text(
    "hi",
)
Text(
    ")",
)
Newline

STDERR:
